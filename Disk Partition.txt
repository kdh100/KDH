1. 디스크의 종류
	* IDE/SATA : /dev/hd$
	* SCSI/SAS : /dev/sd$
2. 디스크 파티션
	* BIOS(F/W) > MBR 파티션 방식 : 주 파티션(1~4), 확장 파티션(택1), 논리 파티션(5~15)
	* UEFI(F/W) > GPT 파티션 방식 : 파티션(1~128)
	* fdisk : 2TB 이하의 디스크에 대한 파티션 프로그램
		- -l : 파티션 테이블 확인
	* partprobe : 리부팅 없이 파티션 재인식시키기 위한 명령어
	* df -hT : 파티션 디스크 사용률 확인
		- -h : human-readable
		- -T : 파일시스템 확인
	* du -h : 디렉토리 사용률 확인
	* lsblk -fp : 디스크 리스트 확인
		- -f : 파일시스템 확인
		- -p : 절대 경로 확인
3. 파일시스템
	* 파일을 저장/관리하는 체계, 리눅스에서는 ext2~4, xfs 등이 있고 윈도우에서는 NTFS, FAT32 등이 대표적
	* ext2 > ext3(+ 저널링: 비정상 종료시 로그 기록으로 장애 복구) > ext4(+ 온라인 조각모음)
	* xfs 는 읽기 속도가 빨라 주로 OS 시스템 관련 파일시스템으로 사용되며, 나머지 부분들은 ext4 를 주로 사용
	* mkfs.$ : 파일시스템 생성
		- -m : Minfree(Reserved Block) 공간을 퍼센트로 설정
			# 오직 관리자만을 위해 예약된 메모리 공간
			# tune2fs -m CMD : Minfree 수정
	* fsck.$ : 파일시스템 점검		# 사용중인 파일시스템에선 사용 금지
	* Superblock : 파일시스템 내 모든 정보를 담은 마스터 블록
		- 정보가 손상될 경우 해당 파일시스템에 대한 접근 및 rwx 불가
		- dump2fs $DISK | grep -i superblock : 해당 디스크의 슈퍼블록 정보 확인
		- e2fsck -b $SERIAL $DISK : 위에서 확인 된 백업 슈퍼블록 정보를 통해 해당 디스크의 슈퍼블록 복구
4. 마운트
	* /etc/fstab : 부팅 시 마운트 정보가 저장된 파일
		- 디스크 작업 후 해당 파일에 경로 추가해야 부팅 시 정상 마운트 됨
5. LVM
    * Logical Volume Manager : 논리적으로 물리적인 볼륨들을 그룹화하여 하나의 덩어리로 만들어 관리
    * 구성 과정
        - sudo yum install -y lvm2
            # 필요 패키지 설치
        - pvcreate /dev/sda1
        - pvs
            # 물리적 볼륨 확인
        - vgcreate <vg 이름> /dev/sda1
        - vgs
            # 볼륨 그룹 확인
        - lvcreate -n <lv 이름> -l +100%FREE <vg 이름>
            # -n : 이름
              -l : 사이즈 퍼센트 지정
              -L : 사이즈 단위 지정(K,M,G,T)
        - lvs
            # 논리적 볼륨 확인
        - mkfs -t <fs 타입> /dev/<vg 이름>/<lv 이름>
        - mount /dev/<vg 이름>/<lv 이름> <마운트포인트>
    * 확장/감소 과정
        - lsblk, df 를 통한 추가 디스크 확인 및 fdisk 를 통한 초기화
        - pvcreate /dev/sdb1
        - pvs
        - vgextend | vgreduce <vg 이름> /dev/sdb1
        - vgs
        - lvextend -l +100%FREE | lvreduce -L -500G /dev/<vg 이름>/<lv 이름>
        - lvs
        - resize2fs | xfs_growfx /dev/<vg 이름>/<lv 이름>
            # 볼륨 조정에 이은 파일시스템 resize 작업
                ~ resize2fs : ext4
                  xfs_growfx : xfs
6. MPIO(Multipath IO)
    * 다중 세션에 의한 IO 경로 확장으로 디스크 성능 overload 가능(세션이 너무 많을 경우 효용성 감소)
        - yum install -y device-mapper-multipath
        - systemctl enable --now multipathd
        - vi /etc/multipath.conf  //다중경로 설정파일
            defaults {  //전체 다중경로에 대한 기본 옵션
              checker_timeout 600
              user_friendly_names yes  //alias 사용
            }
            blacklist {  //다중경로에 해당되지 않는 경우 정의
              device {
                vendor "QEMU"
                product '*'
              }
            }

            # The below section will handle Zadara volumes
            devices {
              device {  //다중경로 해당되는 장비별 정의
                vendor "Zadara"
                product "VPSA"

                path_grouping_policy multibus
                path_checker tur

                # You can try different path selectors
                path_selector "round-robin 0"
                # path_selector "queue-length 0"
                # path_selector "service-time 0"

                failback manual

                rr_min_io 1
                no_path_retry 20
              }
            }
            multipaths {  //다중경로에 대한 특성 설정
              multipath {
                wwid 23465623261653636  //다중경로 내 WWID 에 대한 지정
                alias miscsi1  //지정된 WWID 에 대한 alias 지정, lsblk 에서 해당 alias 명으로 확인
              }
            }