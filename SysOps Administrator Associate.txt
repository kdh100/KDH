[ Cloud Essentials ]
1. 클라우드 관리
    * 수동
        - AWS 관리 콘솔
        - AWS API
        - AWS CLI
    * 자동
        - CloudFormation(Infrastructure as Code; 소스 제어 시스템에 저장된 템플릿)
            # Infrastructure as Code
                ~ 간편한 유지관리
                ~ 손쉬운 보안 설정
                ~ 신속한 설계 가능
                ~ 뛰어난 확장성
2. AWS 클라우드
    * 필요한 만큼한 사용하고 사용한 만큼만 비용 지불
    * EC2 를 활용한 서버-클라이언트 구조(클라우드 컴퓨팅 배포) 구축 가능
        - EC2(Elastic Compute Cloud) : 가상 서버
        - 클라우드 컴퓨팅 배포
            # 클라우드 배포 : 모든 리소스가 클라우드 기반
            # 온프레미스 배포 : 프라이빗 클라우드 배포, 기존 물리 방식
            # 하이브리드 배포 : 온프레미스 인프라 리소스 + 클라우드 리소스
                ~ Outposts 서비스
    * 장점
        - 불가피한 선행 비용 -> 가변 비용(훨씬저렴)
        - 규모가 커질수록 가변 비용이 축소(할인가능)
        - 용량 추정 불필요(자동확장)
        - 빠른 속도(유연함)
        - 장비 관리 불필요(유지비용X)
        - 전세계 확장성(리전별 자체 IDC 존재)
3. 요금
    [요금 정책]
    * 온디맨드
        - 사용한 만큼 지불
        - 불규칙적 단기 워크로드에 적합
    * 예약 인스턴스
        - 온디맨드 결제 할인 옵션
        - 표준, 컨버터블 예약을 1년/3년 약정
        - 약정 기간 끝나면 온디맨드로 변환됨
    * 스팟 인스턴스
        - 미사용중인 EC2 리소스를 사용하여 온디맨드 요금의 최대 90% 절감
        - 시작/중단/종료가 자유로운 워크로드에 적합
            # 리소스가 없거나 사용불가, 수요가 늘면 인스턴스 중단될 수 있음
    * 전용 호스트
        - 물리 서버
    * 프리 티어
        - 상시무료, 12개월무료, 평가판
    * Savings Plans
        - 사용량을 1년/3년 약정, 온디맨드 요금의 최대 72% 절감
        - 약정 사용량까지는 Savings Plans, 초과 사용량은 온디맨드
    * Cost Explorer
        - AWS 비용, 사용량을 시각화하고 관리하는 서비스
            # 여러가지 그룹화(서비스별, 리전별 등) 제공 및 사용자 임의 태그를 통한 그룹화 가능
            # 태그는 키-값 페어(NRDS; DynamoDB)를 기준
            # 보고서 작성에 특화된 기본값 외 사용자 정의 보고서 작성 제공
            # Savings Plans 를 위한 맞춤 권장 사항 제공 가능
    * Pricing Calculator
        - AWS 서비스를 탐색, 사용 사례에 대한 비용을 추정해 정의된 그룹별로 구성 가능
    * Billings(결제)
        - 요금 결제 및 요금 관리 대시보드
    * Solidate Billings(통합 결제)
        - 다중 AWS 계정으로 Organizations 으로 통합하여 조직 소유자의 계정에 통합 결제를 진행
            # 대량 할인(Bulk Discount) 가능
            # Saving Plans 및 예약 인스턴스 공유 가능
    * Budget(예산)
        - 예산을 생성, 서비스 사용/비용 및 인스턴스 예약을 계획 가능
            # 하루 세 번 업데이트되어 정확한 예산 측정 가능
            # 예산 금액 임계치 설정으로 일정 수준의 예산 초과 예정 혹은 초과 시 알람 발생 가능
    [고객 지원]
    * AWS Support(고객 지원)
        - Basic
            # 모든 고객에게 무료 제공되는 고객 지원 서비스
                ~ 24시간 고객 서비스(문서/백서 지원 및 지원 포럼 포함)
                ~ Trusted Advisor
                ~ Personal Health Dashboard(무료 대시보드)
        - Developer
            # Basic + 고객지원팀 이메일 답변 수신(평시 24시간 내, 장애시 12시간 내)
        - Business
            # Developer + 고객지원팀 전화 답변 수신(장애시 4시간 내, 시스템 다운 시 1시간 내)
                ~ 모든 항목에 대한 Trushted Advisor 검사 지원 가능
        - Enterprise
            # Business + 전화 답변 수신(모든 장애 15분 내) + 전담 기술자(TAM), AWS 전문가 지원
                ~ TAM(Technical Account Mananger) : Well-Architeched 검토, 운영 및 이벤트 관리
                ~ Well-Architeced : 운영 우수성, 보안성, 안정성, 성능효율성, 비용최적화 검사
                ~ 고객 전담 기술전문가로써 문제 뿐만 아니라 고객의 전반적인 지원 담당자
    * Marketplace
        - ISV(Independent Software Vendor)의 S/W 수천 개가 포함된 디지털 카탈로그
            # 검색, 평가, 구매 가능
                ~ 비지니스 어플리케이션, 데이터 및 분석 정보, 마이그레이션, 보안 등
4. EC2
    * 시작 & 연결
        - 인스턴스 시작
            # OS, APP 등이 포함된 기본 구성 템플릿 선택 가능
            # 인스턴스 유형에서 하드웨어 구성 변경 가능
            # In/Out 네트워크 트래픽 보안 설정 지정
        - 인스턴스 연결
            # 프로그램 등에 직연동하여 데이터 교환
            # 하이퍼터미널 등을 통해 인스턴스에 직접 엑세스 가능
    * 유형
        - 범용
            # 기본
        - 컴퓨팅 최적화
            # 고성능 처리
        - 메모리 최적화
            # 방대한 데이터 처리
        - 스토리지 최적화
            # 고성능 IOPS(초당 입출력 수; 스토리지 성능 지표) 처리
        - 엑셀러레이티드
            # 데이터 처리 가속화
    * EC2 Auto Scaling
        - 수평적 자동 확장 서비스
        - 동적 조정
            # 수요 변화에 동적으로 대응하여 인스턴스 추가/제거
        - 예측 조정
            # 미리 예측한 수요에 따라 인스턴스 자동 예약
        - 그룹
            # 최소 용량
                ~ 최소 인스턴스 설정
            # 희망 용량
                ~ 희망 인스턴스 설정(없으면 최소 용량과 동일)
            # 최대 용량
                ~ 최대 인스턴스 설정(필요시 자동 확장되는 범위)
    * ELB(Elastic Load Blancing)
        - '외부 트래픽 > ELB > Auto Scaling' 구조
        - 프론트앤드는 물론 백앤드에서도 적용되는 리전 형태
    * SQS(Simple Queue Service)
        - 모놀리식 어플리케이션 서비스의 단점
            # 밀결합된 구성요소 구조로 한 요소의 장애가 전체 장애로 발전 가능
        - 마이크로 어플리케이션 서비스 접근 방식 사용
            # 구성요소 간의 Payload(데이터가 포함된 메시지) 전송/처리 보조
            # 대기열(Queue) 방식으로 메시지를 전송/저장/검색 가능
    * SNS(Simple Notification Service)
        - 게시/구독 서비스
            # 게시자는 그룹화된 주제에 따라 메시지 전달
            # 구독자는 구독한 그룹의 주제에 따라 메시지 수신
                ~ 일반 사용자(A2P), 다른 어플리케이션(A2A)
5. 서버리스 컴퓨팅
    * EC2 는 지속적으로 인스턴스 관리를 해줘야하는 번거로움이 있음
    * 오로지 어플리케이션(코딩)만 신경쓰고 나머지는 자동으로 처리
    * Lambda
        - 단순 서비스(코드)만 실행할 수 있는 서비스
            # 이벤트 소스에서 트리거되도록 설정하여 필요시에만 실행되게 함
        - 서비스(코드)를 실행한 동안만 요금 부과
    * ECS(Elastic Contrainer Service)
        - Docker 를 사용한 컨테이너 관리 서비스
            # Container 란 어플리케이션 코드, 종속성을 하나의 객체로 패키지한 것
        - EC2 에서도 사용 가능
    * EKS(Elastic Kubernetes Service)
        - Kubernetes 를 사용한 컨테이너 관리 서비스
        - EC2 에서도 사용 가능
    * Fargate
        - 컨테이너 서비스(ECS, EKS)에 적합한 컴퓨팅 시스템
6. 글로벌 인프라(리전)
    * 선택사항
        - 거버넌스(정부 지침) 및 법적 요구사항 준수
        - 접근성
        - 기능 가용성
        - 요금
    * AZ(Available Zone; 가용영역)
        - 리전 내 단일 IDC 혹은 IDC 그룹
            # 리전 내 AZ 포함
        - 인스턴스를 다른 AZ 에 분산시켜서 운용하여 HA(High Availability) 충족
    * 엣지 로케이션
        - 리전과 물리적으로 멀리 떨어진 곳의 새로운 가용영역
        - Outposts 를 사용하면 자체 로컬에 AWS 리소스를 그대로 사용하듯 구축 가능
        - CloudFront(CDN 서비스) 를 통해 리전의 데이터 사본을 고객에서 캐싱
            # Origin : 파일을 가져오는 서버
7. 인터페이스
    * Management Console
        - 웹 GUI 기반의 수동 관리 인터페이스
    * CLI(Command Line Interface)
        - 자동 관리를 위한 API 요청을 수행하는 시간을 절약해주는 서비스
        - API(Application Programing Interface)
            # 어플리케이션의 자동 실행을 구현하는 인터페이스
            # 코드로 자동 관리/실행이 가능
    * SDK(Software Development Kit)
        - 소프트웨어 개발 키트
    * Elastic Beanstalk
        - 자동 인스턴스 프로비저닝을 위한 서비스
        - 사용자가 코드 및 구성 설정을 제공하면 자동 구성
            # 용량 조정
            # 로드 밸런싱
            # 자동 조정
            # 모니터링
    * CloudFormation
        - 자동 인스턴스 프로비저닝을 위한 서비스
        - 인프라 자체를 코드로 취급 가능
        - 오류 감지 시 변경 사항을 자동으로 롤백
8. 네트워크
    * VPC(Virtual Private Cloud)
        - 서브넷으로 섹션을 격리하여 리소스를 배치하고 사용할 수 있는 서비스
        - 게이트웨이를 통해 VPC 로 트래픽 송수신
            # Virtual Private Gateway 를 통해 사설 서브넷 VPC 통신 관리 가능
    * Direct Connect
        - B2B 전용 회선
        - 별도의 리전 내 전용 회선 팀과 상의하여 물리 회선 제공받아야 함
    * ACL(Access Control List)
        - VPC 를 구성할 때 기본 네트워크 ACL 이 포함되어있음
            # 사용자 지정 ACL 생성 적용 가능
            # ACL 은 항상 적용되는 가상 방화벽으로 상태 비저장 필터링 제공
    * 보안 그룹
        - EC2 생성시 기본 보안 그룹에 모두 포함되어있음
            # 기본값은 인트래픽 거부, 아웃트래픽 허용
            # 사용자 지정 규칙을 추가 적용 가능
            # 상태 저장 필터링 제공
    * Route 53(DNS 서비스)
        - AWS 자체 DNS 서비스로 다양한 컴퓨팅 시스템에서 사용 가능
9. 스토리지 및 DB
    * EBS(Elastic Block Store)
        - AZ 단위의 저장 공간(블록 스토어) 서비스(EC2 사용 가능)
        - 블록 방식으로 데이터 수정 후 수정된 부분만 업데이트 가능
        - 스냅샷(Snapshot) 기능으로 증분 백업/복구 가능
    * EFS(Elastic File System)
        - 리전 단위의 저장 공간(파일 시스템) 서비스
        - 파일 시스템 단위로 데이터 읽기/쓰기가 가능하고 다중 인스턴스에 동시 작업 가능
        - 파일 시스템 단위로 저장되어 저장공간이 자동으로 확장/축소
    * S3(Simple Storage Service)
        - 객체 스토리지의 구성요소는 데이터, 메타데이터, 키
            # 데이터는 실제 데이터
            # 메타데이터는 데이터의 내용,크기 등의 대략적인 정보
            # 키는 고유 ID
        - 객체 방식으로 데이터 수정 후 전체 객체(파일) 업데이트 진행
        - S3 데이터를 버킷에 객체로 저장하는 서비스
            # 최대 객체 파일 5TB
            # 파일 업로드 시 권한 설정으로 엑세스 제어 가능
            # 버전 관리 가능
        - 데이터 검색 빈도, 필요 데이터 가용성에 따라 클래스 선택 가능
            # Standard
                ~ 자주 엑세스할 때
                ~ 최소 3개의 AZ 에 저장됨
            # Standard-IA(Infrequent Access)
                ~ 자주 엑세스하지 않을 때
                ~ 스토리지는 저렴, 사용 비용은 비쌈
            # One Zone-IA
                ~ 단일 AZ 에 저장
                ~ Standard-IA 보다 저렴
            # Intelligent-Tiering
                ~ 엑세스 패턴이 불규칙할 때
                ~ 객체를 모니터링 후 자동으로 각 클래스 계층으로 분류
                ~ 객체당 소량의 자동화 요금 부과
            # Glacier
                ~ 데이터 보관용 저비용 스토리지
                ~ 객체를 몇 분 혹은 몇 시간 이내 검색
            # Glacier Deep Archive
                ~ 가장 저렴한 보관용 스토리지
                ~ 객체를 12시간 이내 검색
    * RDS(Relational Database Service)
        - 관계형 DB 는 데이터 - 데이터 간의 연관된 방식(행, 열로 구분)을 저장하고 쿼리
            # 정해진 테이블에는 동일한 속성(Attribute)값만 들어가있어야 하는 고정적인 방식
            # 정적 스키마를 사용하므로 모든 테이블의 데이터를 유연하게 수정하지 못함
        - AWS RDS
            # AWS 환경에서 관계형 RDS 를 사용할 수 있는 서비스
            # HDD 고가용성 프로비저닝, DB 설정/패치/백업 자동 관리 서비스 제공
            # Lambda 서비스를 사용하여 Serverless 어플리케이션 + DB 쿼리 자동화 가능
        - AWS Aurora
            # 기업형 RDS 엔진(MySQL, PostgreSQL 호환)
                ~ 기존 RDS 엔진보다 3~5배 빠름
            # DB 리소스 안정성과 가용성 유지 및 불필요한 IO 작업을 최소화
                ~ 비용 최대 1/10 로 절감
            # 3개의 복사본을 3개의 AZ에 복제하고 S3 에 지속적으로 백업
    * NRDS(Non-Relational Database Service)
        - 비관계형 DB 는 키를 생성하여 그 위에 데이터를 저장하고 쿼리(키-값)
            # 키 위에 저장되는 속성값은 모두 동일한 속성값을 가질 필요가 없어 유연함
        - AWS DynamoDB
            # Serverless DB 서비스
                ~ 모든 규모에서 엄청나게 빠른 응답속도
            # 기존의 RDS 와 다르게 빠른 처리 속도로 다량의 작업량 수행 가능
                ~ DAX(DynamoDB Accelerator) 서비스 사용 시 3배 더 빠르게 수행 가능
                ~ 기본 캐싱 계층
    * Redshift
        - 과거에 있었던 기록들을 분석/처리하는데 필요성이 있음
            # 현재 : 커피 원두 얼만큼 남았는지 확인해 줘
            # 과거 : 지난 1주일 간의 판매 실적 확인해 줘
        - 이러한 필요성은 현재 DB 모델에서는 처리하기 어려울 수 있음
        - 빅 데이터 분석에 필요한 데이터 웨어하우징 서비스
            # 단일 API 호출 작업으로 빅데이터 BI(Business Intelligent) 실현
    * DMS(DB Migration Service)
        - 원본 DB <-> 대상 DB 간 데이터 이동 서비스
            # 동종 DB 이거나 이종 DB 상관없이 지원 가능
            # 이종의 경우 AWS Schema Conversion Tool 을 통해 스키마, 코드 변환
              그 다음, DMS 를 통해 마이그레이션 진행
        - 개발/테스트 목적, 다중 DB 를 단일 DB 로 통합, 연속 복제 활용 가능
    * DocumentDB
        - 컨텐츠 관리, 카탈로그, 사용자 프로필에 적합한 문서형 DB(MongoDB 워크로드)
    * Neptune
        - 추천 엔진, 사기 탐지, 지식 그래프같은 소셜 웹에 효과적인 그래프형 DB
    * QLDB(Quantum Ledger Database)
        - 데이터 불변성을 보장하여 어플리케이션에서 발생한 모든 기록 검토 가능
            # 불변성에 따른 다른 서비스로는 Managed Blockchain 이 있음
                ~ 대량의 분산화 요소가 추가되어 부담될 수 있음
    * ElastiCache
        - DB 내 캐싱 계층을 추가하여 응답 속도를 3배 개선할 수 있는 서비스
            # Memcached 및 Redis 유형의 저장소를 지원
            # DAX 와 비슷함
10. 보안 정책
    * 공동 책임 모델
        - AWS 는 클라우드 자체(물리적 인프라, 네트워크/가상화 인프라) 보안 담당
        - 고객은 클라우드 내부(OS, 어플리케이션, 데이터) 보안 담당
    * 사용자 권한 및 액세스
        - IAM(Identity and Access Management)
            # 최초 계정은 루트 사용자로 로그온
                ~ 모든 사용자는 MFA(Multi-Factor Authentication) 활성화 권장
                ~ 이메일, 암호, 일회용 토큰(OTP 코드)까지 있어야 로그인 가능
            # IAM 을 통해 사용자, 그룹, 역할 생성/부여 가능
                ~ 사용자 기본 권한은 all deny
                ~ IAM 정책(.json) 을 통해 권한 정의 가능
                ~ 정책은 사용자 혹은 그룹에 설정할 수 있음
            # IAM 역할(Role) 은 임시 권한 증명
                ~ 역할 기반 액세스를 사용하여 기업의 자체 자격 증명과 연동 가능
        - Organizations
            # AWS 계정을 중앙에서 관리하는 서비스
                ~ 계정 전체에서 결제, 액세스, 보안 정책 관리 가능
            # 최초 조직은 루트 컨테이너에 포함
                ~ 필요에 따라 계정을 OU, BU 로 그룹화 가능
            # SCP(Service Control Policy) 를 통해 조직 내 계정 권한 제어 가능
                ~ 사용자 권한 및 역할 제어
    * 규정 준수
        - Artifact
            # AWS 보안 및 규정 준수 보고서, 온라인 계약 온디맨드 엑세스 서비스
            # Agreements
                ~ 개별 계정 혹은 Organizations 에 대한 계약 검토/수락 및 관리
            # Reports
                ~ 외부 감사 기관이 작성한 규정 준수 보고서 제공
                ~ 리전별, 사업별 보안 표준 및 규정을 준수했음을 검증함
                ~ 감사 시 외부 제출용 보안 검증 문서 제공
        - 고객 규정 준수 센터
            # 보안 감사 체크리스트, AWS 위험 및 규정 준수 개요 등 확인
    * DDoS(Distributed Denial of Service)
        - 이미 AWS 시스템이 대부분의 DDoS 공격을 방어해주고 있음
            # EC2 의 보안 그룹을 통한 정해진 트래픽 통신을 통해 UDP Flood 방어
            # 프론트엔드에 위치한 ELB 를 통해 HTTP 레벨 공격 방어
        - WAF(Web Application Firewall)
            # 어플리케이션으로 들어오는 네트워크 요청을 모니터링하는 웹 방화벽
                ~ CloudFront 및 ALB(Applicatiton Load Balancer) 와 함께 작동
                ~ 웹 ACL 구성을 통해 액세스 관리
        - Shield
            # AWS WAF(Web Application Firewall)을 이용한 DDoS 방어 서비스
            # Standard
                ~ 무료
                ~ 실시간 악성 트래픽 감지 및 자동 완화
            # Advanced
                ~ 유료
                ~ 상세한 공격 진단 및 정교한 DDoS 공격 탐지, 완화
                ~ CloudFront, Route 53, ELB 서비스와 통합 가능
    * KMS(Key Management Service)
        - 데이터의 저장 상태, 전송 중 암호화 작업을 키를 통해 수행하는 서비스
        - 암호화 키를 생성, 관리, 사용
            # IAM 사용자 및 역할을 통해 키 관리 설정 가능
    * Inspector
        - 자동 보안 평가 서비스
            # EC2 인스턴스 오픈 액세스, 소프트웨어 버전 취약점 등을 검사
            # 보안 탐지 결과 목록 제공
                ~ 심각도 수준에 따라 우선 순위 부여, 설명 및 Workaround 제공
    * GuardDuty
        - AWS 인프라 및 리소스에 대한 지능형 위협 탐지 기능 제공 서비스
            # 네트워크, 계정 활동을 지속적으로 분석
            # Management Console 에서 탐지된 위협의 결과(Workaround 포함) 확인 가능
                ~ Troubleshooting 을 위한 Lambda 함수 구성 가능
11. 모니터링
    * CloudWatch(NMS)
        - 다양한 지표를 모니터링하고 관리, 알람 작업을 구성할 수 있는 웹 서비스
            # 사전 정의된 임계값에 따라 자동으로 작업을 수행하는 알람 생성 가능
            # 알람은 SNS 와 통합 가능
        - 대시보드 기능
            # 단일 위치에서 클라우드와 온프레미스 리소스에 대한 모든 지표가 자동 업데이트
                ~ 모든 리소스에 대한 가시성 확보
                ~ MTTR(Min-Time to Resolution; 문제해결 시간) 단축
                ~ TCO(Total Cost Ownership; 총 소유 비용) 감소
    * CloudTrail(Log)
        - AWS 대한 모든 요청을 기록하는 API 감사 도구 서비스
            # 15분 이내에 모든 이벤트를 기록
        - Insights
            # AWS 계정 내 비정상적인 API 활동을 자동으로 감지하는 옵션
    * Trusted Advisor
        - 5대 핵심 원칙을 기반으로 AWS 권장 사항을 실시간으로 제시하는 무료 웹 서비스
            # 비용 최적화, 성능, 보안, 내결함성, 서비스 한도
12. 마이그레이션
    * CAF(Cloud Adoption Framework)
        [사업 중점]
        - 비지니스 : 사업 및 회계
        - 인력 : 인력 관리
        - 거너번스 : 기술 및 프로세스
        [기술 중점]
        - 플랫폼 : IT 기술
        - 보안 : IT 정보보안
        - 운영 : IT 운영/지원
    * 6R Stratage
        - 이관(Rehosting) ; Rift and Shift
            # 기존 시스템을 그대로 클라우드 환경으로 이동
        - 설정(Replatforming)
            # 이관시킨 시스템을 더 나은 환경으로 설정
        - 폐기(Retire)
            # 마이그레이션 중 기존 시스템의 불필요한 부분들을 제거
        - 유지(Retain)
            # 마이그레이션 중 기존 시스템에서 아직 필요한 부분들을 현재 상태로 유지
        - 구매(Repurchasing)
            # 마이그레이션 중 클라우드 환경에서 더 적합한 리소스 구매(계약)
                ~ 선행 비용 상승
        - 생산(Refactoring)
            # 마이그레이션 후 새로운 환경에서의 생산 시도
                ~ 초기 비용 가장 높음
    * Snow 원격 장비
        - AWS Management Console 에서 주문 가능
        - Snowcone
            # CPU 2개, 4G 메모리, 8TB 가용 스토리지
            # 간단한 엣지컴퓨팅(EC2, IoT Greengrass) + 데이터 전송
                ~ 데이터 복사 > AWS 전송 > AWS S3 에 데이터 백업
        - Snowball Edge
            # Edge Compute Optimized
                ~ 52개 vCPU, 208G 메모리, 42TB HDD(S3, EBS 호환) + 7.68TB NVMe SSD(EBS 호환)
                ~ 고성능 컴퓨팅 특화
            # Edge Storage OPtimized
                ~ 40개 vCPU, 80G 메모리, 80T HDD(S3, EBS 호환) + 1TB SATA SSD(EBS 호환)
                ~ 고용량 마이그레이션 특화
        - Snowmobile
            # 트레일러 트럭 컨테이너로 이동하는 엑사바이트 규모의 데이터 전송 서비스
                ~ 최대 80-100페타바이트 데이터 전송 가능
    * 혁신 기술
        - Serverless Application
            # AWS Lambda
        - AI(Aritificial Intelligent)
            # Lex : 음성 및 텍스트 챗봇 빌드
            # Transcribe : 음성 -> 텍스트 변환
            # Textract : 문서에서 텍스트/데이터 추출
            # Comprehend : 텍스트에서 패턴 검색
            # Fraud Detector : 온라인 사기 행위 식별
        - ML(Machine Learning)
            # SageMaker : 머신러닝 모델 빌드, 훈련, 배포 특화 서비스
            # A2I(Augmented AI) : 머신 러닝 사례에 대한 검토 워크플로 제공
        - VMware on AWS
        - DeepRacer
        - Ground Station
13. 프레임워크
    * Well-Architeched Tool
        - 운영우수성
            # 코드로 작업 수행, 문서 주석 추가, 소규모 변경을 자주 수행
        - 보안성
            # 계층별 보안 적용, 데이터 전송/저장 암호화, 모범 보안 사례 자동 적용
        - 안정성
            # 장애 자동 복구, 시스템 가용성 향상을 위한 확장
        - 성능효율성
            # 서버리스 아키텍처 유무, 배포가능 시스템 유무
        - 비용최적화
            # 소비 모델 종류, 비용 분석, 비용 절감 유무
14. AWS 공인 클라우드 전문가 시험
    * 클라우드 개념(26%)
    * 보안 및 규정(25%)
    * 기술(33%)
    * 결제 및 요금(16%)
[ SysOps-Associate ]
1. AWS IAM Architecture
    * 